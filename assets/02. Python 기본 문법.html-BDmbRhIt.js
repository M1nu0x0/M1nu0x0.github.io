import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,d as h,b as k,e as n,a as i,r,o as c,f as a}from"./app-Cb5zpRCR.js";const g={};function o(y,s){const l=r("CodeTabs");return c(),p("div",null,[s[6]||(s[6]=h(`<h1 id="_2-python-기본-문법" tabindex="-1"><a class="header-anchor" href="#_2-python-기본-문법"><span>2. Python 기본 문법</span></a></h1><h2 id="_2-1-데이터-타입" tabindex="-1"><a class="header-anchor" href="#_2-1-데이터-타입"><span>2.1 데이터 타입</span></a></h2><h3 id="_2-1-1-기본" tabindex="-1"><a class="header-anchor" href="#_2-1-1-기본"><span>2.1.1 기본</span></a></h3><table><thead><tr><th style="text-align:center;">type</th><th style="text-align:center;">desc</th></tr></thead><tbody><tr><td style="text-align:center;">int</td><td style="text-align:center;">정수형</td></tr><tr><td style="text-align:center;">float</td><td style="text-align:center;">부동소수점</td></tr><tr><td style="text-align:center;">complex</td><td style="text-align:center;">복소수</td></tr><tr><td style="text-align:center;">str</td><td style="text-align:center;">문자열</td></tr><tr><td style="text-align:center;">bool</td><td style="text-align:center;">불리언</td></tr><tr><td style="text-align:center;">None</td><td style="text-align:center;">None (값이 없음을 나타냄)</td></tr><tr><td style="text-align:center;">bytes</td><td style="text-align:center;">바이트 데이터 (불변)</td></tr><tr><td style="text-align:center;">bytearray</td><td style="text-align:center;">바이트 데이터(가변)</td></tr><tr><td style="text-align:center;">list</td><td style="text-align:center;">리스트(가변)</td></tr><tr><td style="text-align:center;">tuple</td><td style="text-align:center;">튜플(불변)</td></tr><tr><td style="text-align:center;">set</td><td style="text-align:center;">집합</td></tr><tr><td style="text-align:center;">frozenset</td><td style="text-align:center;">불변 집합</td></tr><tr><td style="text-align:center;">dict</td><td style="text-align:center;">딕셔너리</td></tr></tbody></table><p>다른 <code>type</code>의 쓰임은 대강 알고 있으리라 생각이 된다. 하지만 <code>bytes</code>와 <code>bytearray</code>는 생소하리라 생각이 든다. 예제를 보자.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># example of bytes vs bytearray</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">b </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello&quot;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(b[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 104 (ASCII 값)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ba </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> bytearray</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ba[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 72</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(ba) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># bytearray(b&#39;Hello&#39;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-1-2-type이란-무엇인가" tabindex="-1"><a class="header-anchor" href="#_2-1-2-type이란-무엇인가"><span>2.1.2 type이란 무엇인가?</span></a></h3><p>Python에서 <code>type</code>은 객체의 <strong>메모리 구조</strong>, <strong>연산 규칙</strong>, 그리고 <strong>동작 정의</strong>를 담당하는 개념이다. Python의 모든 값은 객체이며, 변수는 객체를 참조하는 방식으로 동작한다. 객체의 <code>type</code>은 해당 객체가 어떤 종류인지와, 사용 가능한 연산 및 메서드를 정의한다.</p><h4 id="클래스도-type의-인스턴스" tabindex="-1"><a class="header-anchor" href="#클래스도-type의-인스턴스"><span>클래스도 <code>type</code>의 인스턴스</span></a></h4><p>Python에서는 <strong>클래스조차도 객체</strong>이며, 모든 클래스는 <code>type</code>의 인스턴스이다. 이는 Python이 클래스 정의와 동작을 동적으로 제어할 수 있는 이유이다.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> MyClass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  pass</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># MyClass는 type의 인스턴스</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(MyClass))  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># &lt;class &#39;type&#39;&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># MyClass의 인스턴스</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">obj </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> MyClass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(obj))  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># &lt;class &#39;__main__.MyClass&#39;&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>참고: <a href="https://docs.python.org/3/library/stdtypes.html" target="_blank" rel="noopener noreferrer">Built-in Data Types</a></p><details class="hint-container details"><summary><strong><code>__main__</code></strong> 이란?</summary><p>C나 Java와 같은 언어들은 진입 지점으로 main 함수가 등장한다. 하지만 Python은 이러한 전통적인 main 함수 구조를 강제하지 않는다. Python은 인터프리터 언어로, 파일을 실행하면 코드가 위에서부터 순차적으로 실행된다. 즉, 파일의 진입 지점이 별도로 지정되지 않아도, 작성된 코드가 곧 실행 흐름이 된다. 이는 실행된 파일이 main이 되며, 해당 파일의 <code>__name__</code> 속성이 <code>&quot;__main__&quot;</code>이 된다는 뜻이다.</p><p>그러나, 복잡한 프로그램에서는 진입 지점을 명확히 하고 모듈화를 지원하기 위해 <code>if __name__ == &quot;__main__&quot;:</code> 블록을 사용하는 것이 일반적이다.이 방식은 특정 파일이 직접 실행될 때와 모듈로 임포트될 때를 구분할 수 있게 한다. 이를 코드의 재사용성과 유지보수성을 높이는 데 기여한다. 예를 들어:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;main func&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;__main__&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">  main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>위 코드에서 <code>main()</code> 함수는 <code>__name__</code>이 <code>&quot;__main__&quot;</code>일 때만 호출된다. 파일이 다른 모듈에 의해 <code>import</code>될 경우 <code>main()</code>은 실행되지 않으며, 이는 예기치 않은 코드 실행을 방지하는 데 유용하다.</p><p>다른 모듈로 불러왔을 때의 예시도 작성을 해보자면,</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>\${root}</span></span>
<span class="line"><span>|  main_script.py</span></span>
<span class="line"><span>|  my_module.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># my_module.py</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;loading my_module&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;my_module의 __name__: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">__name__</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">def module_function():</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  print(&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">my_module의 함수가 호출되었습니다.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;__main__&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;test start&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">  module_function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># main_script.py</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> my_module</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;main_script의 __name__: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">__name__</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">def main():</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  print(&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">main_script의 main 함수가 실행되었습니다.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  my_module.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">module_function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;__main__&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">  main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>실행 결과</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main_script.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>loading my_module</span></span>
<span class="line"><span>my_module의 __name__: my_module</span></span>
<span class="line"><span>main_script의 __name__: __main__</span></span>
<span class="line"><span>main_script의 main 함수가 실행되었습니다.</span></span>
<span class="line"><span>my_module의 함수가 호출되었습니다.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>my_module.py의 &quot;test start&quot; 문구와 함수 호출 출력문이 실행되지 않은 것을 확인할 수 있으며, __name__이 어떤지도 알 수 있다.</p></details><h3 id="_2-1-3-형-변환과-타입-확인" tabindex="-1"><a class="header-anchor" href="#_2-1-3-형-변환과-타입-확인"><span>2.1.3 형 변환과 타입 확인</span></a></h3><h4 id="형-변환" tabindex="-1"><a class="header-anchor" href="#형-변환"><span>형 변환</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;123&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">y </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(x)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(y))  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># &lt;class &#39;int&#39;&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="타입-확인" tabindex="-1"><a class="header-anchor" href="#타입-확인"><span>타입 확인</span></a></h4><p>isinstance라는 함수가 있구나 정도만 알아두면 된다.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">isinstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">42</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># True</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">isinstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Python&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># True</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-2-변수와-연산자" tabindex="-1"><a class="header-anchor" href="#_2-2-변수와-연산자"><span>2.2 변수와 연산자</span></a></h2><h3 id="_2-2-1-변수" tabindex="-1"><a class="header-anchor" href="#_2-2-1-변수"><span>2.2.1 변수</span></a></h3><h4 id="변수-선언" tabindex="-1"><a class="header-anchor" href="#변수-선언"><span>변수 선언</span></a></h4><ul><li>Python에서는 변수 선언 시 데이터 타입을 명시하지 않아도 된다.</li><li>값이 할당되는 시점에 타입이 결정된다.</li></ul><h4 id="네임스페이스" tabindex="-1"><a class="header-anchor" href="#네임스페이스"><span>네임스페이스</span></a></h4><ul><li>변수는 특정 <code>scope</code>의 네임스페이스에 저장된다.</li></ul><h4 id="가비지-컬렉션" tabindex="-1"><a class="header-anchor" href="#가비지-컬렉션"><span>가비지 컬렉션</span></a></h4><ul><li>참조가 끊긴 객체는 Python의 가비지 컬렉터에 의해 자동으로 메모리에서 제거된다.</li></ul><h3 id="_2-2-2-연산자" tabindex="-1"><a class="header-anchor" href="#_2-2-2-연산자"><span>2.2.2 연산자</span></a></h3><h4 id="산술-연산자" tabindex="-1"><a class="header-anchor" href="#산술-연산자"><span>산술 연산자</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">x, y </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> y)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 덧셈</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> y)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 뺄셈</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> y)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 곱셈</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> y)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 나눗셈 (float)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> y) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 몫 (int)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> y)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 나머지 (int)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">**</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> y) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 거듭 제곱</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="비교-논리-비트-연산자" tabindex="-1"><a class="header-anchor" href="#비교-논리-비트-연산자"><span>비교, 논리, 비트 연산자</span></a></h4><ul><li>비교: <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>, <code>==</code>, <code>!=</code></li><li>논리: <code>and</code>, <code>or</code>, <code>not</code></li><li>비트: <code>&amp;</code>, <code>|</code>, <code>^</code>, <code>~</code>, <code>&lt;&lt;</code>, <code>&gt;&gt;</code></li></ul><h4 id="복합-연산자" tabindex="-1"><a class="header-anchor" href="#복합-연산자"><span>복합 연산자</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # x = x + 3</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # x = x * 2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-3-제어문" tabindex="-1"><a class="header-anchor" href="#_2-3-제어문"><span>2.3 제어문</span></a></h2><h3 id="_2-3-1-조건문" tabindex="-1"><a class="header-anchor" href="#_2-3-1-조건문"><span>2.3.1 조건문</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;x는 5보다 크다&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">elif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;x는 5이다&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;x는 5보다 작다&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="삼항-연산" tabindex="-1"><a class="header-anchor" href="#삼항-연산"><span>삼항 연산</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># (true case) if condition else (false case)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">a, b </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">max_value </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> a </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> a </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(max_value)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 20</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-2-반복문" tabindex="-1"><a class="header-anchor" href="#_2-3-2-반복문"><span>2.3.2 반복문</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># for 변수 in Iterable:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#   code</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(i)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(n)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>python에서는 <code>for</code>문과 <code>while</code>문 뒤에 <code>else</code>를 붙이면 정상 종료 시에 <code>else</code>를 진입한다. 가독성 때문에 사용하지 않는다.</p><p>반복문 내부에는 <code>break</code>와 <code>continue</code> keyword를 사용할 수 있는데, 차이는 다음과 같다. <strong>break</strong> : 해당 iter를 종료하고 반복문 탈출. <strong>continue</strong> 해당 iter를 종료하고 다음 iter 시작.</p><p>for문 심화는 Iterable 게시물에서 확인.</p><h2 id="_2-4-함수" tabindex="-1"><a class="header-anchor" href="#_2-4-함수"><span>2.4 함수</span></a></h2><h3 id="_2-4-1-함수-정의" tabindex="-1"><a class="header-anchor" href="#_2-4-1-함수-정의"><span>2.4.1 함수 정의</span></a></h3><p>Python에서 함수를 정의하는 방식은 두 가지가 있다. 하나는 전통적인 함수 선언 방식으로 <code>def</code>를 이용하는 것이다. 다른 하나는 <code>lambda</code>를 이용하는 것이다.</p>`,48)),k(l,{id:"293",data:[{id:"def"},{id:"lambda"}],"tab-id":"shell"},{title0:n(({value:t,isActive:e})=>s[0]||(s[0]=[a("def")])),title1:n(({value:t,isActive:e})=>s[1]||(s[1]=[a("lambda")])),tab0:n(({value:t,isActive:e})=>s[2]||(s[2]=[i("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"def"),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," func1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#986801","--shiki-light-font-style":"inherit","--shiki-dark":"#D19A66","--shiki-dark-font-style":"italic"}},"arg1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},","),i("span",{style:{"--shiki-light":"#986801","--shiki-light-font-style":"inherit","--shiki-dark":"#D19A66","--shiki-dark-font-style":"italic"}}," arg2"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},","),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#ABB2BF"}}," ..."),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"):")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"  # do something")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"  return")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),tab1:n(({value:t,isActive:e})=>s[3]||(s[3]=[i("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"func2 "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}}," lambda"),i("span",{style:{"--shiki-light":"#986801","--shiki-light-font-style":"inherit","--shiki-dark":"#D19A66","--shiki-dark-font-style":"italic"}}," x"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"return"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," x"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"*"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"2")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1)])),_:1}),s[7]||(s[7]=i("p",null,"지금 함수를 정의한 것에서 볼 수 있듯이 함수는 입력과 출력을 가질 수 있다.",-1)),s[8]||(s[8]=i("h3",{id:"_2-4-2-함수-입출력",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#_2-4-2-함수-입출력"},[i("span",null,"2.4.2 함수 입출력")])],-1)),s[9]||(s[9]=i("p",null,"함수의 정의 시에 매개변수 위치에 변수를 넣으면 입력이 된다. 이 때 default값을 지정할 수 있다.",-1)),k(l,{id:"310",data:[{id:"python"}],"tab-id":"shell"},{title0:n(({value:t,isActive:e})=>s[4]||(s[4]=[a("python")])),tab0:n(({value:t,isActive:e})=>s[5]||(s[5]=[i("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"def"),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," func3"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#986801","--shiki-light-font-style":"inherit","--shiki-dark":"#D19A66","--shiki-dark-font-style":"italic"}},"arg1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},","),i("span",{style:{"--shiki-light":"#986801","--shiki-light-font-style":"inherit","--shiki-dark":"#D19A66","--shiki-dark-font-style":"italic"}}," arg2"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":"),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}}," str"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"None"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},") -> "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"None"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"  # do something")]),a(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"  return")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),_:1}),s[10]||(s[10]=h('<p>위 코드를 보면 <code>arg2</code>가 <code>str</code> 타입으로 <code>annotation</code>되어있고, 만일 매개변수로 전달이 되지 않는다면 기본 값인 <code>None</code>을 갖는다는 설명을 갖고있다. 함수에서 화살표 표현은 함수의 <code>return</code>에 대한 <code>annotation</code>으로 코드상 동작은 하지 않는 주석이다.</p><ul><li>함수 정의, 인자 (<code>*args</code>, <code>**kwargs</code>).</li><li>기본값 인자와 키워드 전용 인자 (<code>*, arg</code>).</li><li>함수 객체와 <code>callable()</code>: <ul><li><code>__call__</code> 메서드를 가진 객체의 동작.</li><li><code>callable(object)</code>의 활용.</li></ul></li></ul><h2 id="_2-5-예외-처리" tabindex="-1"><a class="header-anchor" href="#_2-5-예외-처리"><span>2.5 예외 처리</span></a></h2><ul><li><code>try</code>, <code>except</code>, <code>else</code>, <code>finally</code> 구조.</li><li>Built-in Exceptions (ValueError, KeyError, IndexError 등).</li><li>사용자 정의 예외와 예외 계층 설계.</li></ul><h2 id="list-comprehension" tabindex="-1"><a class="header-anchor" href="#list-comprehension"><span>List Comprehension</span></a></h2>',5))])}const u=d(g,[["render",o],["__file","02. Python 기본 문법.html.vue"]]),b=JSON.parse('{"path":"/posts/Languages/Python/02.%20Python%20%EA%B8%B0%EB%B3%B8%20%EB%AC%B8%EB%B2%95.html","title":"2. Python 기본 문법","lang":"ko-KR","frontmatter":{"title":"2. Python 기본 문법","date":"2025-01-19T00:00:00.000Z","cover":"/posts/Languages/Python/02/thumbnail.png","category":["Language"],"tag":["Python"]},"headers":[{"level":2,"title":"2.1 데이터 타입","slug":"_2-1-데이터-타입","link":"#_2-1-데이터-타입","children":[{"level":3,"title":"2.1.1 기본","slug":"_2-1-1-기본","link":"#_2-1-1-기본","children":[]},{"level":3,"title":"2.1.2 type이란 무엇인가?","slug":"_2-1-2-type이란-무엇인가","link":"#_2-1-2-type이란-무엇인가","children":[]},{"level":3,"title":"2.1.3 형 변환과 타입 확인","slug":"_2-1-3-형-변환과-타입-확인","link":"#_2-1-3-형-변환과-타입-확인","children":[]}]},{"level":2,"title":"2.2 변수와 연산자","slug":"_2-2-변수와-연산자","link":"#_2-2-변수와-연산자","children":[{"level":3,"title":"2.2.1 변수","slug":"_2-2-1-변수","link":"#_2-2-1-변수","children":[]},{"level":3,"title":"2.2.2 연산자","slug":"_2-2-2-연산자","link":"#_2-2-2-연산자","children":[]}]},{"level":2,"title":"2.3 제어문","slug":"_2-3-제어문","link":"#_2-3-제어문","children":[{"level":3,"title":"2.3.1 조건문","slug":"_2-3-1-조건문","link":"#_2-3-1-조건문","children":[]},{"level":3,"title":"2.3.2 반복문","slug":"_2-3-2-반복문","link":"#_2-3-2-반복문","children":[]}]},{"level":2,"title":"2.4 함수","slug":"_2-4-함수","link":"#_2-4-함수","children":[{"level":3,"title":"2.4.1 함수 정의","slug":"_2-4-1-함수-정의","link":"#_2-4-1-함수-정의","children":[]},{"level":3,"title":"2.4.2 함수 입출력","slug":"_2-4-2-함수-입출력","link":"#_2-4-2-함수-입출력","children":[]}]},{"level":2,"title":"2.5 예외 처리","slug":"_2-5-예외-처리","link":"#_2-5-예외-처리","children":[]},{"level":2,"title":"List Comprehension","slug":"list-comprehension","link":"#list-comprehension","children":[]}],"git":{"createdTime":1734432680000,"updatedTime":1737360392000,"contributors":[{"name":"M1nu0x0","username":"M1nu0x0","email":"oxygen3112@daum.net","commits":3,"url":"https://github.com/M1nu0x0"},{"name":"M1nu0x0","username":"M1nu0x0","email":"oxygen0112@naver.com","commits":1,"url":"https://github.com/M1nu0x0"}]},"readingTime":{"minutes":1.56,"words":467},"filePathRelative":"posts/Languages/Python/02. Python 기본 문법.md","localizedDate":"2025년 1월 19일","excerpt":"\\n<h2>2.1 데이터 타입</h2>\\n<h3>2.1.1 기본</h3>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:center\\">type</th>\\n<th style=\\"text-align:center\\">desc</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:center\\">int</td>\\n<td style=\\"text-align:center\\">정수형</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">float</td>\\n<td style=\\"text-align:center\\">부동소수점</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">complex</td>\\n<td style=\\"text-align:center\\">복소수</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">str</td>\\n<td style=\\"text-align:center\\">문자열</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">bool</td>\\n<td style=\\"text-align:center\\">불리언</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">None</td>\\n<td style=\\"text-align:center\\">None (값이 없음을 나타냄)</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">bytes</td>\\n<td style=\\"text-align:center\\">바이트 데이터 (불변)</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">bytearray</td>\\n<td style=\\"text-align:center\\">바이트 데이터(가변)</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">list</td>\\n<td style=\\"text-align:center\\">리스트(가변)</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">tuple</td>\\n<td style=\\"text-align:center\\">튜플(불변)</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">set</td>\\n<td style=\\"text-align:center\\">집합</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">frozenset</td>\\n<td style=\\"text-align:center\\">불변 집합</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">dict</td>\\n<td style=\\"text-align:center\\">딕셔너리</td>\\n</tr>\\n</tbody>\\n</table>"}');export{u as comp,b as data};
